{"version":3,"sources":["components/navbar/afo-navbar.js","components/group-discover.js","constants/api-urls.js","services/anime-service.js","services/image-search-service.js","actions/action-constants.js","actions/anime-actions.js","constants/genre-id.js","components/search/anime-result.js","components/filter-list.js","components/home/afo-home.js","components/search/search-form.js","components/search/search-results.js","components/search/afo-search.js","components/animePage/afo-anime.js","components/login.js","components/registration.js","reducers/anime-reducer.js","App.js","reportWebVitals.js","index.js"],"names":["AfoNavbar","mainMenuRef","useRef","profileMenuRef","useState","mainMenu","setMainMenu","profileMenu","setProfileMenu","useEffect","pageClickEvent","e","current","contains","target","window","addEventListener","removeEventListener","className","onClick","title","to","style","textDecoration","ref","GroupDiscover","ANIME_URL","api","findAllAnimeForUser","user","fetch","then","response","json","findWatchedAnimeForUser","findCompletedAnimeForUser","findAnimeByID","id","findAnimeByTitle","findAnimeByGenre","genreId","findImageByURL","imageURL","ok","Promise","reject","catch","error","console","log","FIND_ANIME_BY_TITLE","FIND_ANIME_BY_GENRE","FIND_ANIME_BY_ID","animeActions","dispatch","animeService","results","type","searchKey","findAnimeByURL","imageAnimeService","data","animeName","docs","title_english","findAnimeById","animeId","anime","animeGenres","ACTION","ADVENTURE","CARS","COMEDY","DEMENTIA","DEMONS","MYSTERY","DRAMA","ECCHI","FANTASY","GAME","HENTAI","HISTORICAL","HORROR","KIDS","MAGIC","MARTIAL_ARTS","MECHA","MUSIC","PARODY","SAMURAI","ROMANCE","SCHOOL","SCI_FI","SHOUJO","SHOUJO_AI","SHOUNEN","SHOUNEN_AI","SPACE","SPORTS","SUPER_POWER","VAMPIRE","YAOI","YURI","HAREM","SLICE_OF_LIFE","SUPERNATURAL","MILITARY","POLICE","PYSCHOLOGICAL","THRILLER","SEINEN","JOSEI","AnimeResult","props","mal_id","rated","src","image_url","alt","synopsis","connect","state","resultsList","animeReducer","url","filterList","selectedGenre","setSelectedGenre","map","item","index","length","selectedTab","AfoHome","SearchForm","animeTab","setAnimeTab","groupTab","setGroupTab","userTab","setUserTab","animeTabOption","setAnimeTabOption","tabClicked","tab","value","name","searchTitle","onChange","event","setSearchTitle","titleAlert","role","searchClicked","searchURL","setSearchURL","SearchResults","currentPage","resultPages","searchType","setSearchType","setResultPages","setCurrentPage","pcFirst","setPcFirst","pcSecond","setPcSecond","pcThird","setPcThird","setTitleAlert","makePageLists","updatePageControls","newSearchPages","numResults","remainder","numPages","Math","floor","p","tempPageList","first","last","slice","push","val","tempCurrentPage","currentFirst","currentSecond","currentThird","currentAnime","pageStatus","setPageStatus","useParams","genres","title_japanese","rating","score","genre","episodes","aired","string","status","trailer_url","href","Login","Registration","initialState","action","reducer","combineReducers","store","createStore","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fd1e9d4.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport '../../styles/afo-navbar.css';\n\nconst AfoNavbar = () => {\n    const mainMenuRef = useRef(null);\n    const profileMenuRef = useRef(null);\n    const [mainMenu, setMainMenu] = useState(false);\n    const [profileMenu, setProfileMenu] = useState(false);\n    const mainClick = () => setMainMenu(!mainMenu);\n    const profileClick = () => setProfileMenu(!profileMenu);\n\n    useEffect(() => {\n        const pageClickEvent = (e) => {\n            if(mainMenuRef.current !== null && !mainMenuRef.current.contains(e.target)){\n                setMainMenu(false);\n            }\n        };\n        if(mainMenu) {\n            window.addEventListener('click', pageClickEvent);\n        }\n        return () => {\n            window.removeEventListener('click', pageClickEvent);\n        }\n\n    }, [mainMenu]);\n\n    useEffect(() => {\n        const pageClickEvent = (e) => {\n            if(profileMenuRef.current !== null && !profileMenuRef.current.contains(e.target)){\n                setProfileMenu(false);\n            }\n        };\n        if(profileMenu) {\n            window.addEventListener('click', pageClickEvent);\n        }\n        return () => {\n            window.removeEventListener('click', pageClickEvent);\n        }\n\n    }, [profileMenu]);\n\n    return(\n        <>\n            <div className=\"row navbar fixed-top navbar-expanded-lg navbar-dark afo-navbar\">\n                <div className=\"col-3\">\n                    <i className=\"fa fa-bars btn afo-white navbar-btn\"\n                       onClick={mainClick}\n                       title=\"main menu\"></i>\n                </div>\n                <div className=\"col-6 text-center\">\n                    <Link to=\"/home\" style={{ textDecoration:'none'}}>\n                        <span className=\"afo-white\">\n                            <strong>AFO</strong>\n                        </span>\n                    </Link>\n                </div>\n                <div className=\"col-3 text-right\">\n                    <i className=\"fa fa-user-circle btn afo-white navbar-btn\"\n                       onClick={profileClick}\n                       title=\"profile menu\"></i>\n                </div>\n            </div>\n\n            <div className=\"row menu-container\">\n                <div className=\"col-6 main-menu-container\">\n                    <nav ref={mainMenuRef} className={`menu main-menu ${mainMenu ? 'active' : 'inactive'}`}>\n                        <ul>\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/search\">Search</Link></li>\n                        </ul>\n                    </nav>\n                </div>\n                <div className=\"col-6 profile-menu-container\">\n                    <nav ref={profileMenuRef} className={`menu profile-menu ${profileMenu ? 'active' : 'inactive'}`}>\n                        <ul>\n                            <li><Link to=\"/login\">Login</Link></li>\n                            <li><Link to=\"/register\">Register</Link></li>\n                            <li><Link to=\"/\">Log Out</Link></li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n\n        </>\n    );\n};\n\nexport default AfoNavbar;","import React from \"react\";\n\nconst GroupDiscover = () => {\n    return(\n        <div className=\"row\">\n            <div className=\"col-12\">\n\n            </div>\n        </div>\n    );\n};\n\nexport default GroupDiscover;","export const ANIME_URL = \"https://api.jikan.moe/v3\";\nexport const WHAT_ANIME_URL = \"https://trace.moe/api/search\";","import {ANIME_URL} from \"../constants/api-urls\"\n\n// tested with postman for users:\n// 1. Nekomata1037\n// 2. taffy0066\n// Note. These are usernames for MyAnimeList\nconst findAllAnimeForUser = (user) => {\n    return fetch(`${ANIME_URL}/user/${user}/animelist/all`)\n        .then(response => response.json())\n};\n\nconst findWatchedAnimeForUser = (user) => {\n    return fetch(`${ANIME_URL}/user/${user}/animelist/watching`)\n        .then(response => response.json())\n};\n\nconst findCompletedAnimeForUser = (user) => {\n    return fetch(`${ANIME_URL}/user/${user}/animelist/completed`)\n        .then(response => response.json())\n};\n\n// fetch request for single MyAnimeList Object\nconst findAnimeByID = (id) => {\n    return fetch(`${ANIME_URL}/anime/${id}`)\n        .then(response => response.json())\n};\n\n// fetch request for anime by title\nconst findAnimeByTitle = (title) => {\n    return fetch(`${ANIME_URL}/search/anime?q=${title}`)\n        .then(response => response.json())\n};\n\n// fetch request for anime by genre\nconst findAnimeByGenre = (genreId) => {\n    return fetch(`${ANIME_URL}/genre/anime/${genreId}`)\n        .then(response => response.json())\n};\n\nconst api = {\n    //search operation by user\n    findAllAnimeForUser,\n    findWatchedAnimeForUser,\n    findCompletedAnimeForUser,\n    //search operation by anime\n    findAnimeByID,\n    findAnimeByTitle,\n    findAnimeByGenre\n};\n\nexport default api;","import {WHAT_ANIME_URL} from \"../constants/api-urls\"\n\n// Rate limit of 10 requests per minute\n// Results are usually not accurate unless 90% similarity\nconst findImageByURL = (imageURL) => {\n    return fetch(`${WHAT_ANIME_URL}?url=${imageURL}`)\n        // .then(response => response.json)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            } else {\n                return Promise.reject(response)\n            }\n        })\n        .catch(error => console.log(error))\n}\n\nconst api = {\n    findImageByURL\n}\n\nexport default api;","export const FIND_ANIME_BY_TITLE = \"FIND_ANIME_BY_TITLE\";\nexport const FIND_ANIME_BY_GENRE = \"FIND_ANIME_BY_GENRE\";\nexport const FIND_ANIME_BY_ID = \"FIND_ANIME_BY_ID\";","import animeService from \"../services/anime-service\";\nimport imageAnimeService from \"../services/image-search-service\"\nimport {FIND_ANIME_BY_GENRE, FIND_ANIME_BY_TITLE, FIND_ANIME_BY_ID} from \"./action-constants\";\n\nexport const findAnimeByTitle = (dispatch, title) => {\n    animeService\n        .findAnimeByTitle(title)\n        .then(results => dispatch({\n            type: FIND_ANIME_BY_TITLE,\n            results: results,\n            searchKey: title\n        }))\n};\n\nexport const findAnimeById = (dispatch, animeId) => {\n    animeService\n        .findAnimeByID(animeId)\n        .then(results => dispatch({\n            type: FIND_ANIME_BY_ID,\n            anime: results,\n            searchKey: 'id'\n        }))\n};\n\nexport const findAnimeByGenre = (dispatch, genreId) => {\n    animeService\n        .findAnimeByGenre(genreId)\n        .then(results => dispatch({\n            type: FIND_ANIME_BY_GENRE,\n            results: results,\n            searchKey: 'id'\n        })).catch(error => console.log(error))\n};\n\nexport const findAnimeByURL = (dispatch, imageURL) => {\n    imageAnimeService\n        .findImageByURL(imageURL)\n        .then(data => {\n            const animeName = data.docs[0].title_english;\n            return animeService.findAnimeByTitle(animeName)\n        })\n        .then(results => dispatch({\n            type: FIND_ANIME_BY_TITLE,\n            results: results,\n            searchKey: 'url'\n        }))\n        .catch(error => console.log(error))\n};\n\nconst animeActions = {\n    findAnimeByTitle, findAnimeByGenre, findAnimeByURL, findAnimeById\n};\n\nexport default animeActions;\n","// constants for genre ids to be passed to anime-service.\n\nexport const ACTION =  1;\nexport const ADVENTURE = 2;\nexport const CARS = 3;\nexport const COMEDY = 4;\nexport const DEMENTIA = 5;\nexport const DEMONS = 6;\nexport const MYSTERY = 7;\nexport const DRAMA = 8;\nexport const ECCHI = 9;\nexport const FANTASY = 10;\nexport const GAME = 11;\nexport const HENTAI = 12;\nexport const HISTORICAL = 13;\nexport const HORROR = 14;\nexport const KIDS = 15;\nexport const MAGIC = 16;\nexport const MARTIAL_ARTS = 17;\nexport const MECHA = 18;\nexport const MUSIC = 19;\nexport const PARODY = 20;\nexport const SAMURAI = 21;\nexport const ROMANCE = 22;\nexport const SCHOOL = 23;\nexport const SCI_FI = 24;\nexport const SHOUJO = 25;\nexport const SHOUJO_AI = 26;\nexport const SHOUNEN = 27;\nexport const SHOUNEN_AI = 28;\nexport const SPACE = 29;\nexport const SPORTS = 30;\nexport const SUPER_POWER = 31;\nexport const VAMPIRE = 32;\nexport const YAOI = 33;\nexport const YURI = 34;\nexport const HAREM = 35;\nexport const SLICE_OF_LIFE = 36;\nexport const SUPERNATURAL = 37;\nexport const MILITARY = 38;\nexport const POLICE = 39;\nexport const PYSCHOLOGICAL = 40;\nexport const THRILLER = 41;\nexport const SEINEN = 42;\nexport const JOSEI = 43;\n\nexport const animeGenres = {\n    ACTION,\n    ADVENTURE,\n    CARS,\n    COMEDY,\n    DEMENTIA,\n    DEMONS,\n    MYSTERY,\n    DRAMA,\n    ECCHI,\n    FANTASY,\n    GAME,\n    HENTAI,\n    HISTORICAL,\n    HORROR,\n    KIDS,\n    MAGIC,\n    MARTIAL_ARTS,\n    MECHA,\n    MUSIC,\n    PARODY,\n    SAMURAI,\n    ROMANCE,\n    SCHOOL,\n    SCI_FI,\n    SHOUJO,\n    SHOUJO_AI,\n    SHOUNEN,\n    SHOUNEN_AI,\n    SPACE,\n    SPORTS,\n    SUPER_POWER,\n    VAMPIRE,\n    YAOI,\n    YURI,\n    HAREM,\n    SLICE_OF_LIFE,\n    SUPERNATURAL,\n    MILITARY,\n    POLICE,\n    PYSCHOLOGICAL,\n    THRILLER,\n    SEINEN,\n    JOSEI\n};\n\nexport default animeGenres;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst AnimeResult = (props) => {\n\n    return(\n        <div className=\"row anime-result-container my-5\">\n            <div className=\"col-12\">\n                <div className=\"row pt-3 result-header\">\n                    <div className=\"col-9\">\n                        <h4>\n                            <Link className=\"result-header-title\" to={`/anime/${props.anime.mal_id}`}>\n                                {props.anime.title}\n                            </Link>\n                        </h4>\n                    </div>\n                    <div className=\"col-3 text-right\">\n                        <p className=\"afo-gray\">{props.anime.rated}</p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-6 col-md-4\">\n                        <img\n                            src={props.anime.image_url}\n                            className=\"result-img\"\n                            alt={`Anime, ${props.anime.title}`}/>\n                    </div>\n                    <div className=\"col-6 col-md-8\">\n                        <p className=\"afo-black\" >{props.anime.synopsis}\n                        <Link className=\"result-read-more\" to={`/anime/${props.anime.mal_id}`}>\n                            (read more)\n                        </Link>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default AnimeResult;","import React, {useEffect, useState} from \"react\";\nimport animeActions from \"../actions/anime-actions\";\nimport {connect} from \"react-redux\";\nimport animeGenres from \"../constants/genre-id\";\nimport AnimeResult from \"./search/anime-result\";\nimport '../styles/afo-filter-list.css';\nimport {Link} from \"react-router-dom\";\n\nconst FilterList = (props) => {\n    const[selectedGenre, setSelectedGenre] = useState(props.filterList[0]);\n\n    useEffect(() => {\n        console.log(props.resultsList);\n    }, [props.resultsList]);\n\n    const selectedTab = (item) => {\n        setSelectedGenre(item);\n        console.log(animeGenres.ACTION);\n        props.findAnimeByGenre(animeGenres.ACTION);\n    };\n\n    return(\n        <div className=\"row my-5\">\n            <div className=\"col-12\">\n                <div className=\"afo-filter-container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <ul>\n                                        {\n                                            props.filterList &&\n                                            props.filterList.map((item, index) =>\n                                                <div className=\"row\">\n                                                    <div className={`col-12 ` + (selectedGenre === item ? \"afo-filter-tab-box-selected\" : \"afo-filter-tab-box\")}>\n                                                        <div className={(index+1 === props.filterList.length ? \"\" : \"afo-filter-tab-bottom\")}>\n                                                            <div className=\"col-12\">\n                                                                <h5\n                                                                    className={`btn afo-filter-tab-title ` + (selectedGenre === item ? \"afo-purple\" : \"afo-black\")}\n                                                                    onClick={() => selectedTab(item)}>\n                                                                    <strong>{item}</strong>\n                                                                </h5>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            )\n                                        }\n                                    </ul>\n                                </div>\n                                <div className=\"col-8 afo-filter-result-container\">\n\n                                        <ul className=\"afo-filter-result-box\">\n                                            {\n                                                props.resultsList.anime &&\n                                                props.resultsList.anime.map((anime, index) =>\n                                                    <li key={index} className=\"afo-filter-result\">\n                                                        <div className=\"row m-3\">\n                                                            <div className=\"col-6\">\n                                                                <img\n                                                                    src={anime.image_url}\n                                                                    className=\"filter-img\"\n                                                                    alt={`Anime, ${anime.title}`}/>\n                                                            </div>\n                                                            <div className=\"col-6\">\n                                                                <Link className=\"afo-filter-result-title afo-black\" to={`/anime/${anime.mal_id}`}>\n                                                                    {anime.title}\n                                                                </Link>\n                                                            </div>\n                                                        </div>\n                                                    </li>\n                                                )\n                                            }\n                                        </ul>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst stateToPropertiesManager = (state) => ({\n    resultsList: state.animeReducer.results,\n    searchKey: state.animeReducer.searchKey\n});\n\nconst dispatchToPropertiesManager = (dispatch) => ({\n    findAnimeByTitle: (title) => animeActions.findAnimeByTitle(dispatch, title),\n    findAnimeByGenre: (genreId) => animeActions.findAnimeByGenre(dispatch, genreId),\n    findAnimeByURL: (url) => animeActions.findAnimeByURL(dispatch, url),\n    findAnimeByID: (animeId) => animeActions.findAnimeById(dispatch, animeId)\n});\n\nexport default connect(stateToPropertiesManager, dispatchToPropertiesManager)(FilterList);","import React from 'react'\nimport AfoNavbar from \"../navbar/afo-navbar\";\nimport GroupDiscover from \"../group-discover\";\nimport FilterList from \"../filter-list\";\n\nconst AfoHome = () => {\n    const filterList = ['ACTION', 'ADVENTURE', 'COMEDY', 'FANTASY', 'HORROR', 'THRILLER', 'ROMANCE', 'SCI_FI'];\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <AfoNavbar/>\n                    <div className=\"row top-row\">\n                        <div className=\"col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <h1 className=\"afo-purple afo-header\">AniFans Only</h1>\n                                </div>\n                            </div>\n                            <GroupDiscover/>\n                            <FilterList\n                                filterList={filterList}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default AfoHome;","import React, {useState} from \"react\";\n\nconst SearchForm= (props) => {\n    const [animeTab, setAnimeTab] = useState(true);\n    const [groupTab, setGroupTab] = useState(false);\n    const [userTab, setUserTab] = useState(false);\n    const [animeTabOption, setAnimeTabOption] = useState('title');\n\n    const tabClicked = (tab) => {\n        if(tab === 'anime'){\n            setAnimeTab(true);\n            setGroupTab(false);\n            setUserTab(false);\n        } else if(tab === 'group'){\n            setAnimeTab(false);\n            setGroupTab(true);\n            setUserTab(false);\n        } else if(tab === 'user'){\n            setAnimeTab(false);\n            setGroupTab(false);\n            setUserTab(true);\n        }\n    };\n\n    return(\n        <div className=\"row\">\n            <div className=\"col-12 py-3\">\n                <div className=\"search-box\">\n                    <div className=\"row box-tab-row\">\n                        <div className={`col-4 box-tab box-tab-12 ${animeTab? 'active' : 'inactive'}`}\n                             onClick={() => tabClicked('anime')}\n                             id=\"animeTab\">\n                            <h6 className=\"btn tab-text\"\n                                onClick={() => tabClicked('anime')}>\n                                Anime\n                            </h6>\n                        </div>\n                        <div className={`col-4 box-tab box-tab-12 ${groupTab ? 'active' : 'inactive'}`}\n                             onClick={() => tabClicked('group')}\n                             id=\"groupTab\">\n                            <h6 className=\"btn tab-text\"\n                                onClick={() => tabClicked('group')}>\n                                Group\n                            </h6>\n                        </div>\n                        <div className={`col-4 box-tab ${userTab ? 'active' : 'inactive'}`}\n                             onClick={() => tabClicked('user')}\n                             id=\"userTab\">\n                            <h6 className=\"btn tab-text\"\n                                onClick={() => tabClicked('user')}>\n                                User\n                            </h6>\n                        </div>\n                    </div>\n                    <div className=\"row box-form-row\">\n                        {\n                            animeTab &&\n                            <div className=\"col box-form\">\n                                <div className=\"row pb-4 pt-1\">\n                                    <div className=\"col-6 text-center py-2\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-secondary anime-form-btn\"\n                                            value=\"searchTitleBtn\"\n                                            onClick={() => setAnimeTabOption('title')}>\n                                            Search by Title\n                                        </button>\n                                    </div>\n                                    <div className=\"col-6 text-center py-2\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-secondary anime-form-btn\"\n                                            value=\"searchImageBtn\"\n                                            onClick={() => setAnimeTabOption('image')}>\n                                            Search by Image\n                                        </button>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col input-form\">\n                                        {\n                                            animeTabOption === 'title' &&\n                                            <>\n                                                <div className=\"row\">\n                                                    <div className=\"col-12\">\n                                                        <label>Input the <strong>anime title</strong> below:</label>\n                                                        <br/>\n                                                        <input type=\"text\"\n                                                               name=\"animeTitleInput\"\n                                                               value={props.searchTitle}\n                                                               className=\"text-input-box\"\n                                                               onChange={(event) => {\n                                                                   props.setSearchTitle(event.target.value)\n                                                               }}/>\n                                                    </div>\n                                                </div>\n                                                {\n                                                    props.titleAlert &&\n                                                    <>\n                                                        <div className=\"alert alert-warning mb-0 mt-2\" role=\"alert\">\n                                                            Need at least 3 characters for search\n                                                        </div>\n                                                    </>\n                                                }\n\n                                                <div className=\"row mt-5\">\n                                                    <div className=\"col-12 text-center\">\n                                                        <button\n                                                            type=\"button\"\n                                                            className=\"btn btn-outline-secondary btn-block search-btn\"\n                                                            value=\"searchAnimeTitle\"\n                                                            onClick={() => {props.searchClicked('title')}}>\n                                                            Search\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </>\n                                        }\n                                        {\n                                            animeTabOption === 'image' &&\n                                            <>\n                                                <div className=\"row\">\n                                                    <div className=\"col-12\">\n                                                        <label>Input the <strong>image URL</strong> below:</label>\n                                                        <br/>\n                                                        <input type=\"text\"\n                                                               name=\"animeImageInput\"\n                                                               value={props.searchURL}\n                                                               className=\"text-input-box\"\n                                                               onChange={(event) => {\n                                                                   props.setSearchURL(event.target.value)\n                                                               }}/>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-12 text-center\">\n                                                        <button\n                                                            type=\"button\"\n                                                            className=\"btn btn-outline-secondary btn-block search-btn mt-5\"\n                                                            value=\"searchAnimeURL\"\n                                                            onClick={() => {props.searchClicked('url')}}>\n                                                            Search\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </>\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {\n                            groupTab &&\n                            <div className=\"col box-form\">\n                                <div className=\"row pt-5\">\n                                    <div className=\"col input-form\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <label>Input the <strong>group name</strong> below:</label>\n                                                <br/>\n                                                <input type=\"text\"\n                                                       name=\"groupNameInput\"\n                                                       className=\"text-input-box\"/>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <button\n                                                    type=\"button\"\n                                                    className=\"btn btn-outline-secondary btn-block search-btn mt-5\"\n                                                    value=\"searchGroup\"\n                                                    onClick={() => {props.searchClicked('group')}}>\n                                                    Search\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {\n                            userTab &&\n                            <div className=\"col box-form\">\n                                <div className=\"row pt-5\">\n                                    <div className=\"col input-form\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <label>Input the <strong>username</strong> below:</label>\n                                                <br/>\n                                                <input type=\"text\"\n                                                       name=\"userNameInput\"\n                                                       className=\"text-input-box\"/>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <button\n                                                    type=\"button\"\n                                                    className=\"btn btn-outline-secondary btn-block search-btn mt-5\"\n                                                    value=\"searchUser\"\n                                                    onClick={() => {props.searchClicked('user')}}>\n                                                    Search\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default SearchForm;","import React from \"react\";\nimport AnimeResult from \"./anime-result\";\n\nconst SearchResults= (props) => {\n\n    return(\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <div className=\"row my-4\">\n                    <div className=\"col-12 text-center\">\n                        <h4 className=\"afo-purple\">\n                            {props.resultsList.length} Results\n                            {\n                                (props.searchKey !== 'url' && props.searchKey !== 'id') &&\n                                <>\n                                    {` for \"`}{props.searchKey}\"\n                                </>\n                            }\n                        </h4>\n                        <p className=\"\">\n                            (Showing items {props.currentPage * 10 - 9}{` - `}\n                            {(props.currentPage * 10 - 9)+props.resultPages[props.currentPage-1].length-1})\n                        </p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        {\n                            props.resultPages[props.currentPage-1].map((anime,index) =>\n                                <AnimeResult\n                                    key={index}\n                                    anime={anime}\n                                    findAnimeByID={props.findAnimeById}\n                                />\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default SearchResults;","import React, {useEffect, useState} from \"react\";\nimport {connect} from 'react-redux';\nimport animeActions from \"../../actions/anime-actions\";\nimport AfoNavbar from \"../navbar/afo-navbar\";\nimport SearchForm from \"./search-form\";\nimport SearchResults from \"./search-results\";\nimport \"../../styles/afo-search.css\"\n\nconst AfoSearch = (props) => {\n    const [searchType, setSearchType] = useState('init');\n    const [searchTitle, setSearchTitle] = useState('');\n    const [searchURL, setSearchURL] = useState('');\n    const [resultPages, setResultPages] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pcFirst, setPcFirst] = useState(0);\n    const [pcSecond, setPcSecond] = useState(0);\n    const [pcThird, setPcThird] = useState(0);\n    const [titleAlert, setTitleAlert] = useState(false);\n\n    useEffect(() => {\n        makePageLists();\n    }, [props.resultsList]);\n\n    useEffect(() => {\n        updatePageControls('first');\n    }, [resultPages]);\n\n    useEffect(() => {\n        setTitleAlert(false);\n    }, [searchType]);\n\n    const searchClicked = (searchType) => {\n        setSearchType(searchType);\n        setTitleAlert(false);\n        if(searchType === 'title'){\n            if(searchTitle.length < 3){\n                setTitleAlert(true);\n            } else{\n                props.findAnimeByTitle(searchTitle);\n            }\n        } else if(searchType === 'url'){\n            props.findAnimeByURL(searchURL);\n        }\n    };\n\n    const makePageLists = () => {\n        let newSearchPages = [];\n        if(props.resultsList && props.resultsList.results){\n            let numResults = props.resultsList.results.length;\n            let remainder = numResults % 10;\n            let numPages = Math.floor( numResults / 10);\n            if(!(remainder === 0)){\n                numPages = numPages + 1;\n            }\n            for(let p = 1; p < numPages+1; p++){\n                let tempPageList = [];\n                let first = 0;\n                let last = 0;\n                if(p === numPages && !(remainder === 0)){\n                    first = (p*10)-10;\n                    last = first + (remainder+1);\n                } else{\n                    last = p*10;\n                    first = last-10;\n                }\n                tempPageList = props.resultsList.results.slice(first, last);\n                newSearchPages.push(tempPageList);\n            }\n            setResultPages(newSearchPages);\n        }\n    };\n\n    const updatePageControls = (val) => {\n        let tempCurrentPage = currentPage;\n        let currentFirst = pcFirst;\n        let currentSecond = pcSecond;\n        let currentThird = pcThird;\n        let numPages = resultPages.length;\n        if(val === 'first'){\n            setCurrentPage(1);\n            setPcFirst(1);\n            if(numPages >=2){\n                setPcSecond(2);\n            } else {\n                setPcSecond(0);\n            }\n            if(numPages >=3){\n                setPcThird(3);\n            } else {\n                setPcThird(0);\n            }\n        } else if(val === 'last'){\n            setCurrentPage(numPages);\n            if(numPages >=3){\n                setPcThird(numPages);\n                setPcSecond(numPages-1);\n                setPcFirst(numPages-2);\n            }\n        } else if(val === 'left'){\n            if(tempCurrentPage > 1){\n                setCurrentPage(tempCurrentPage-1);\n                if(tempCurrentPage-1 === 1){\n                    setPcFirst(1);\n                    setPcSecond(2);\n                    if(numPages >=3){\n                        setPcThird(3);\n                    } else {\n                        setPcThird(0);\n                    }\n                } else if((tempCurrentPage-2 >= 1)){\n                    setPcFirst(tempCurrentPage-2);\n                    setPcSecond(tempCurrentPage-1);\n                    setPcThird(tempCurrentPage);\n                }\n            }\n        } else if(val === 'right'){\n            if(tempCurrentPage < numPages){\n                setCurrentPage(tempCurrentPage+1);\n                if(tempCurrentPage+1 === numPages){\n                    if(numPages === 2){\n                        setPcFirst(1);\n                        setPcSecond(2);\n                        setPcThird(0);\n                    } else if(numPages > 2){\n                        setPcThird(tempCurrentPage+1);\n                        setPcSecond(tempCurrentPage);\n                        setPcFirst(tempCurrentPage-1);\n                    }\n                } else if(tempCurrentPage+2 <= numPages) {\n                    setPcFirst(tempCurrentPage);\n                    setPcSecond(tempCurrentPage+1);\n                    setPcThird(tempCurrentPage+2);\n                }\n            }\n        } else if(val === 'pc1'){\n            if(!(tempCurrentPage === currentFirst)){\n                setCurrentPage(currentFirst);\n                if(currentFirst >= 2){\n                    setPcSecond(currentFirst);\n                    setPcFirst(currentFirst-1);\n                    setPcThird(currentFirst+1);\n                }\n            }\n        } else if(val === 'pc2'){\n            if(!(tempCurrentPage === currentSecond)){\n                setCurrentPage(currentSecond);\n            }\n        } else if(val === 'pc3'){\n            if(!(tempCurrentPage === currentThird)){\n                setCurrentPage(currentThird);\n                if(currentThird >= 3){\n                    if(currentThird === numPages){\n                        setPcThird(numPages);\n                        setPcSecond(numPages-1);\n                        setPcFirst(numPages-2);\n                    } else if(currentThird < numPages){\n                        setPcSecond(currentThird);\n                        setPcFirst(currentThird-1);\n                        setPcThird(currentThird+1);\n                    }\n                }\n            }\n        }\n    };\n\n    return(\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <AfoNavbar/>\n                    <div className=\"row top-row\">\n                        <div className=\"col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <h1 className=\"afo-purple afo-header\">Search</h1>\n                                </div>\n                            </div>\n                            <SearchForm\n                                searchTitle={searchTitle}\n                                setSearchTitle={setSearchTitle}\n                                searchURL={searchURL}\n                                setSearchURL={setSearchURL}\n                                searchClicked={searchClicked}\n                                titleAlert={titleAlert}\n                            />\n                            {\n                                searchType !== 'init' &&\n                                props.resultsList &&\n                                props.resultsList.results &&\n                                resultPages.length === 0 &&\n                                <>\n                                    <div className=\"row my-4\">\n                                        <div className=\"col-12 text-center\">\n                                            <h4 className=\"afo-purple afo-header\">\n                                                0 Results\n                                                {\n                                                    (props.searchKey !== 'url' && props.searchKey !== 'id') &&\n                                                    <>\n                                                        {` for \"`}{props.searchKey}\"\n                                                    </>\n                                                }\n                                            </h4>\n                                        </div>\n                                    </div>\n                                </>\n                            }\n                            {\n                                searchType !== 'init' &&\n                                props.resultsList &&\n                                props.resultsList.results &&\n                                resultPages.length >= 1 &&\n                                <>\n                                    <SearchResults\n                                        searchKey={props.searchKey}\n                                        resultsList={props.resultsList.results}\n                                        resultPages={resultPages}\n                                        currentPage={currentPage}\n                                        findAnimeById={props.findAnimeByID}\n                                    />\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"page-control\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-3 text-right\">\n                                                        <button\n                                                            type=\"button\"\n                                                            className=\"btn btn-outline-secondary pcFirstBtn\"\n                                                            onClick={() => updatePageControls('first')}>\n                                                            First\n                                                        </button>\n                                                    </div>\n                                                    <div className=\"col-1 text-right\">\n                                                        <i className=\"fa fa-caret-left page-arrow fa-2x\"\n                                                           onClick={() => updatePageControls('left')}></i>\n                                                    </div>\n                                                    <div className=\"col-4 text-center\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-4 text-center\">\n                                                                <span\n                                                                    className={`btn pcNum ${currentPage === pcFirst ? 'active' : 'inactive'}`}\n                                                                    onClick={() => updatePageControls('pc1')}>\n                                                                    {pcFirst}</span>\n                                                            </div>\n                                                            {\n                                                                pcSecond > 0 &&\n                                                                <div className=\"col-4 text-center\">\n                                                                    <span\n                                                                        className={`btn pcNum ${currentPage === pcSecond ? 'active' : 'inactive'}`}\n                                                                        onClick={() => updatePageControls('pc2')}>\n                                                                        {pcSecond}\n                                                                    </span>\n                                                                </div>\n                                                            }\n                                                            {\n                                                                pcThird > 0 &&\n                                                                <div className=\"col-4 text-center\">\n                                                                    <span\n                                                                        className={`btn pcNum ${currentPage === pcThird ? 'active' : 'inactive'}`}\n                                                                        onClick={() => updatePageControls('pc3')}>\n                                                                        {pcThird}\n                                                                    </span>\n                                                                </div>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-1 text-left\">\n                                                        <i className=\"fa fa-caret-right page-arrow fa-2x\"\n                                                           onClick={() => updatePageControls('right')}></i>\n                                                    </div>\n                                                    <div className=\"col-3 text-left\">\n                                                        <button\n                                                            type=\"button\"\n                                                            className=\"btn btn-outline-secondary pcLastBtn\"\n                                                            onClick={() => updatePageControls('last')}>\n                                                            Last\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-12 pt-5 text-center\">\n                                                        <p>({resultPages.length} pages total)</p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nconst stateToPropertiesManager = (state) => ({\n    resultsList: state.animeReducer.results,\n    searchKey: state.animeReducer.searchKey\n});\n\nconst dispatchToPropertiesManager = (dispatch) => ({\n    findAnimeByTitle: (title) => animeActions.findAnimeByTitle(dispatch, title),\n    findAnimeByGenre: (genreId) => animeActions.findAnimeByGenre(dispatch, genreId),\n    findAnimeByURL: (url) => animeActions.findAnimeByURL(dispatch, url),\n    findAnimeByID: (animeId) => animeActions.findAnimeById(dispatch, animeId)\n});\n\nexport default connect(stateToPropertiesManager, dispatchToPropertiesManager)(AfoSearch);","import React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport AfoNavbar from \"../navbar/afo-navbar\";\nimport animeActions from \"../../actions/anime-actions\";\nimport {connect} from \"react-redux\";\nimport \"../../styles/afo-anime.css\"\n\nconst AfoAnime = ({currentAnime, findAnimeByID}) => {\n\n    const[pageStatus, setPageStatus] = useState('init');\n\n    const {animeId} = useParams();\n\n    useEffect(() => {\n        console.log(currentAnime);\n        findAnimeByID(animeId);\n        setPageStatus('set');\n    }, [pageStatus, animeId, findAnimeByID]);\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <AfoNavbar/>\n                    {\n                        currentAnime && currentAnime.genres &&\n                        <div className=\"row top-row\">\n                            <div className=\"col-12\">\n                                <div className=\"row\">\n                                    <div className=\"col-12 anime-info\">\n                                        <div className=\"row pb-4\">\n                                            <div className=\"col-12 col-md-6\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-12\">\n                                                        <div className=\"row\">\n                                                            <div className=\"col-12 anime-header\">\n                                                                <h3 className=\"afo-purple\">\n                                                                    {currentAnime.title}\n                                                                </h3>\n                                                                <h6>\n                                                                    {currentAnime.title_japanese}\n                                                                </h6>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"row\">\n                                                            <div className=\"col-12\">\n                                                                <p className=\"afo-gray float-right\">\n                                                                    {currentAnime.rating}\n                                                                </p>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"row\">\n                                                            <div className=\"col-12 pb-5\">\n                                                                <h6 className=\"afo-dark-purple\">\n                                                                    <strong>\n                                                                        <i className=\"fa fa-star\"></i>\n                                                                        {` `}{currentAnime.score} / 10\n                                                                    </strong>\n                                                                </h6>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"row\">\n                                                            <div className=\"col-12 pb-4\">\n                                                                <p>\n                                                                    <strong>Genre: </strong>\n                                                                    {\n                                                                        currentAnime.genres.map((genre,index) =>{\n                                                                            if(index+1 === currentAnime.genres.length){\n                                                                                return <span key={index}>{genre.name}</span>\n                                                                            } else{\n                                                                                return <span key={index}>{genre.name}, </span>\n                                                                            }\n                                                                        })\n                                                                    }\n                                                                </p>\n                                                                <p>\n                                                                    <strong>Episodes:</strong> {currentAnime.episodes}\n                                                                </p>\n                                                                <p>\n                                                                    <strong>Aired:</strong> {currentAnime.aired.string}\n                                                                </p>\n                                                                <p>\n                                                                    <strong>Status:</strong> {currentAnime.status}\n                                                                </p>\n                                                                {\n                                                                    currentAnime.trailer_url &&\n                                                                    <a className=\"btn btn-secondary\"\n                                                                       href={currentAnime.trailer_url} target=\"_blank\">\n                                                                        View Trailer\n                                                                    </a>\n                                                                }\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-12 col-md-6 text-center\">\n                                                <img\n                                                    src={currentAnime.image_url}\n                                                    className=\"anime-img\"\n                                                    alt={`Anime, ${currentAnime.title}`}/>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-12\">\n                                                <p>{currentAnime.synopsis}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n};\n\n\nconst stateToPropertiesManager = (state) => ({\n    currentAnime: state.animeReducer.anime\n});\n\nconst dispatchToPropertiesManager = (dispatch) => ({\n    findAnimeByTitle: (title) => animeActions.findAnimeByTitle(dispatch, title),\n    findAnimeByGenre: (genreId) => animeActions.findAnimeByGenre(dispatch, genreId),\n    findAnimeByURL: (url) => animeActions.findAnimeByURL(dispatch, url),\n    findAnimeByID: (animeId) => animeActions.findAnimeById(dispatch, animeId)\n});\n\nexport default connect(stateToPropertiesManager, dispatchToPropertiesManager)(AfoAnime);","import React from \"react\";\n\nconst Login = () => {\n    return(\n        <div>\n            <h1>Login</h1>\n        </div>\n    )\n};\n\nexport default Login;","import React from \"react\";\n\nconst Registration = () => {\n    return(\n        <div>\n            <h1>Registration</h1>\n        </div>\n    )\n};\n\nexport default Registration;","import {FIND_ANIME_BY_GENRE, FIND_ANIME_BY_TITLE, FIND_ANIME_BY_ID} from \"../actions/action-constants\";\n\nconst initialState = {\n    results: [],\n    user: {},\n    searchKey: '',\n    anime: {}\n};\n\nconst animeReducer = (state=initialState, action) => {\n    switch (action.type) {\n\n        // find anime by search title\n        case FIND_ANIME_BY_TITLE:\n            return {\n                results: action.results,\n                searchKey: action.searchKey\n            };\n        // find anime by genre id\n        case FIND_ANIME_BY_GENRE:\n            return {\n                results: action.results,\n                searchKey: action.searchKey\n            };\n        case FIND_ANIME_BY_ID:\n            return {\n                anime: action.anime,\n                searchKey: action.searchKey\n            };\n        default:\n            return state\n    }\n};\nexport default animeReducer","import {BrowserRouter, Route} from \"react-router-dom\";\nimport AfoHome from \"./components/home/afo-home\";\nimport AfoSearch from \"./components/search/afo-search\";\nimport AfoAnime from \"./components/animePage/afo-anime\";\nimport Login from \"./components/login\";\nimport Registration from \"./components/registration\";\nimport animeReducer from \"./reducers/anime-reducer\";\nimport {combineReducers, createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport \"./styles/App.css\";\nimport \"./styles/afo-colors.css\"\n\nconst reducer = combineReducers({\n    animeReducer: animeReducer\n});\n\nconst store = createStore(reducer);\n\nfunction App() {\n    return (\n        <Provider store={store}>\n                <BrowserRouter>\n                    <Route path={[\"/\", \"/home\"]} exact={true}>\n                        <AfoHome/>\n                    </Route>\n\n                    <Route path={[\"/search\", \"/search/:title\"]}\n                           exact={true}>\n                        <AfoSearch/>\n                    </Route>\n\n                    <Route path={[\"/anime/:animeId\"]}\n                           exact={true}>\n                        <AfoAnime/>\n                    </Route>\n\n                    <Route path={[\"/login\", \"/login/\"]}\n                           exact={true}>\n                        <Login/>\n                    </Route>\n\n                    <Route path={[\"/registration\", \"/registration/\"]}\n                           exact={true}>\n                        <Registration/>\n                    </Route>\n\n                </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '@fortawesome/fontawesome-free/css/all.min.css'\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}