{"ast":null,"code":"var _jsxFileName = \"/Users/tomdiaz/Desktop/webdev-sp21-afo-client-react/src/components/anime-search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport animeActions from \"../actions/anime-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnimeSearch = ({\n  myResults = [],\n  findAnimeByTitle\n}) => {\n  _s();\n\n  const {\n    title\n  } = useParams();\n  const [searchTitle, setSearchTitle] = useState(title);\n  useEffect(() => {\n    setSearchTitle(title);\n    findAnimeByTitle(title);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-9\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: searchTitle,\n          onChange: event => {\n            setSearchTitle(event.target.value);\n          },\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            findAnimeByTitle(searchTitle);\n          },\n          className: \"btn btn-primary btn-block\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: [myResults && myResults.map(anime => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: anime.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this);\n      }), JSON.stringify(myResults)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnimeSearch, \"WZH2oiXrkUvRQnr3swYVtKoudc0=\", false, function () {\n  return [useParams];\n});\n\n_c = AnimeSearch;\n\nconst stateToPropertiesManager = state => ({\n  myResults: state.animeReducer.results\n});\n\nconst dispatchToPropertiesManager = dispatch => ({\n  findAnimeByTitle: title => animeActions.findAnimeByTitle(dispatch, title)\n});\n\nexport default connect(stateToPropertiesManager, dispatchToPropertiesManager)(AnimeSearch);\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeSearch\");","map":{"version":3,"sources":["/Users/tomdiaz/Desktop/webdev-sp21-afo-client-react/src/components/anime-search.js"],"names":["React","useState","useEffect","useParams","connect","animeActions","AnimeSearch","myResults","findAnimeByTitle","title","searchTitle","setSearchTitle","event","target","value","map","anime","JSON","stringify","stateToPropertiesManager","state","animeReducer","results","dispatchToPropertiesManager","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AAEA,MAAMC,WAAW,GAAG,CACZ;AACIC,EAAAA,SAAS,GAAG,EADhB;AAEIC,EAAAA;AAFJ,CADY,KAKf;AAAA;;AACD,QAAM;AAACC,IAAAA;AAAD,MAAUN,SAAS,EAAzB;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACQ,KAAD,CAA9C;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,cAAc,CAACF,KAAD,CAAd;AACAD,IAAAA,gBAAgB,CAACC,KAAD,CAAhB;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AAAO,UAAA,KAAK,EAAEC,WAAd;AACO,UAAA,QAAQ,EAAGE,KAAD,IAAW;AACjBD,YAAAA,cAAc,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH,WAHR;AAIO,UAAA,SAAS,EAAC;AAJjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACI;AACI,UAAA,OAAO,EAAE,MAAM;AACXN,YAAAA,gBAAgB,CAACE,WAAD,CAAhB;AACH,WAHL;AAII,UAAA,SAAS,EAAC,2BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAoBI;AAAA;AAAA;AAAA;AAAA,YApBJ,eAsBI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,iBAGQH,SAAS,IAAIA,SAAS,CAACQ,GAAV,CAAeC,KAAD,IAAW;AACtC,4BACQ;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,oBACKA,KAAK,CAACP;AADX;AAAA;AAAA;AAAA;AAAA,gBADR;AAKC,OANY,CAHrB,EAWKQ,IAAI,CAACC,SAAL,CAAeX,SAAf,CAXL;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CApDD;;GAAMD,W;UAMcH,S;;;KANdG,W;;AAsDN,MAAMa,wBAAwB,GAAIC,KAAD,KAAY;AACzCb,EAAAA,SAAS,EAAEa,KAAK,CAACC,YAAN,CAAmBC;AADW,CAAZ,CAAjC;;AAIA,MAAMC,2BAA2B,GAAIC,QAAD,KAAe;AAC/ChB,EAAAA,gBAAgB,EAAGC,KAAD,IAAWJ,YAAY,CAACG,gBAAb,CAA8BgB,QAA9B,EAAwCf,KAAxC;AADkB,CAAf,CAApC;;AAIA,eAAeL,OAAO,CAACe,wBAAD,EAA2BI,2BAA3B,CAAP,CAA+DjB,WAA/D,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useParams} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport animeActions from \"../actions/anime-actions\";\n\nconst AnimeSearch = (\n        {\n            myResults = [],\n            findAnimeByTitle\n        }\n) => {\n    const {title} = useParams()\n    const [searchTitle, setSearchTitle] = useState(title)\n\n    useEffect(() => {\n        setSearchTitle(title)\n        findAnimeByTitle(title)\n    }, [])\n\n    return (\n        <div>\n            <h2>Search Screen</h2>\n            <div className=\"row\">\n                <div className=\"col-9\">\n                    <input value={searchTitle}\n                           onChange={(event) => {\n                               setSearchTitle(event.target.value)\n                           }}\n                           className=\"form-control\"/>\n                </div>\n                <div className=\"col-3\">\n                    <button\n                        onClick={() => {\n                            findAnimeByTitle(searchTitle)\n                        }}\n                        className=\"btn btn-primary btn-block\">\n                        Search\n                    </button>\n                </div>\n            </div>\n            <br/>\n\n            <ul className=\"list-group\">\n                {\n\n                    myResults && myResults.map((anime) => {\n                    return (\n                            <li className=\"list-group-item\">\n                                {anime.title}\n                            </li>\n                        )\n                    })\n                }\n                {JSON.stringify(myResults)}\n            </ul>\n        </div>\n    )\n}\n\nconst stateToPropertiesManager = (state) => ({\n    myResults: state.animeReducer.results\n})\n\nconst dispatchToPropertiesManager = (dispatch) => ({\n    findAnimeByTitle: (title) => animeActions.findAnimeByTitle(dispatch, title)\n})\n\nexport default connect(stateToPropertiesManager, dispatchToPropertiesManager)(AnimeSearch)\n"]},"metadata":{},"sourceType":"module"}