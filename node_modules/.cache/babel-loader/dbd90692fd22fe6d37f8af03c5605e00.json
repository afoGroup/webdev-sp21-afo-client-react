{"ast":null,"code":"var _jsxFileName = \"/Users/tomdiaz/Desktop/webdev-sp21-afo-client-react/src/components/search/anime-search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport animeActions from \"../../actions/anime-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnimeSearch = ({\n  myResults = [],\n  findAnimeByTitle,\n  findAnimeByGenre\n}) => {\n  _s();\n\n  const {\n    title\n  } = useParams();\n  const [searchTitle, setSearchTitle] = useState(title);\n  const [searchType, setSearchType] = useState(1);\n  /*useEffect(() => {\n      setSearchTitle(title)\n  }, [])*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Anime Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [searchType == 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: searchTitle,\n          onChange: event => {\n            setSearchTitle(event.target.value);\n          },\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), searchType != 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            setSearchType(e.target.value);\n          },\n          value: searchType,\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 1,\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 0,\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            findAnimeByTitle(searchTitle);\n          },\n          className: \"btn btn-primary btn-block\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: myResults && myResults.results && myResults.results.map(anime => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: anime.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnimeSearch, \"OgFHJ6lfTiATyOtDlo2D9knVrDw=\", false, function () {\n  return [useParams];\n});\n\n_c = AnimeSearch;\n\nconst stateToPropertiesManager = state => ({\n  myResults: state.animeReducer.results\n});\n\nconst dispatchToPropertiesManager = dispatch => ({\n  findAnimeByTitle: title => animeActions.findAnimeByTitle(dispatch, title),\n  findAnimeByGenre: genreId => animeActions.findAnimeByGenre(dispatch, genreId)\n});\n\nexport default connect(stateToPropertiesManager, dispatchToPropertiesManager)(AnimeSearch);\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeSearch\");","map":{"version":3,"sources":["/Users/tomdiaz/Desktop/webdev-sp21-afo-client-react/src/components/search/anime-search.js"],"names":["React","useState","useEffect","useParams","connect","animeActions","AnimeSearch","myResults","findAnimeByTitle","findAnimeByGenre","title","searchTitle","setSearchTitle","searchType","setSearchType","event","target","value","e","results","map","anime","stateToPropertiesManager","state","animeReducer","dispatchToPropertiesManager","dispatch","genreId"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useParams} from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport animeActions from \"../../actions/anime-actions\";\n\nconst AnimeSearch = (\n        {\n            myResults = [],\n            findAnimeByTitle,\n            findAnimeByGenre\n        }\n) => {\n    const {title} = useParams()\n    const [searchTitle, setSearchTitle] = useState(title)\n    const [searchType, setSearchType] = useState(1)\n\n    /*useEffect(() => {\n        setSearchTitle(title)\n    }, [])*/\n\n    return (\n        <div>\n            <h2>Anime Search</h2>\n            <div className=\"row\">\n                {\n                    searchType==1 &&\n                    <div className=\"col-6\">\n\n                        <input value={searchTitle}\n                               onChange={(event) => {\n                                   setSearchTitle(event.target.value)\n                               }}\n                               className=\"form-control\"/>\n                    </div>\n                }\n                {\n                    searchType!=1 &&\n                    <div className=\"col-6\">\n\n                    </div>\n                }\n                <div className=\"col-3\">\n                    <select\n                        onChange={(e) => {\n                            setSearchType(e.target.value)\n                        }}\n                        value={searchType} className=\"form-control\">\n                        <option value={1}>Title</option>\n                        <option value={0}>Genre</option>\n                    </select>\n                </div>\n                <div className=\"col-3\">\n                    <button\n                        onClick={() => {\n                            findAnimeByTitle(searchTitle)\n                        }}\n                        className=\"btn btn-primary btn-block\">\n                        Search\n                    </button>\n                </div>\n            </div>\n            <br/>\n\n            <ul className=\"list-group\">\n                {\n                    myResults && myResults.results && myResults.results.map(anime =>\n                            <li className=\"list-group-item\">\n                                {anime.title}\n                            </li>\n                    )\n                }\n            </ul>\n        </div>\n    )\n}\n\nconst stateToPropertiesManager = (state) => ({\n    myResults: state.animeReducer.results\n})\n\nconst dispatchToPropertiesManager = (dispatch) => ({\n    findAnimeByTitle: (title) => animeActions.findAnimeByTitle(dispatch, title),\n    findAnimeByGenre: (genreId) => animeActions.findAnimeByGenre(dispatch, genreId)\n})\n\nexport default connect(stateToPropertiesManager, dispatchToPropertiesManager)(AnimeSearch)\n"]},"metadata":{},"sourceType":"module"}