{"ast":null,"code":"const ANIME_URL = \"https://api.jikan.moe/v3\"; // tested with postman for users:\n// 1. Nekomata1037\n// 2. taffy0066\n// Note. These are usernames for MyAnimeList\n\nconst findAllAnimeForUser = user => {\n  return fetch(`${ANIME_URL}/user/${user}/animelist/all`).then(response => response.json());\n};\n\nconst findWatchedAnimeForUser = user => {\n  return fetch(`${ANIME_URL}/user/${user}/animelist/watching`).then(response => response.json());\n};\n\nconst findCompletedAnimeForUser = user => {\n  return fetch(`${ANIME_URL}/user/${user}/animelist/completed`).then(response => response.json());\n}; // fetch request for single MyAnimeList Objects\n\n\nconst findAnimeByID = id => {\n  return fetch(`${ANIME_URL}/anime/${id}`).then(response => response.json());\n}; // fetch request for anime by tile\n\n\nconst findAnimeByTitle = title => {\n  return fetch(`${ANIME_URL}/search/anime?q=${title}`).then(response => response.json());\n}; // fetch request for anime by genre\n\n\nconst findAnimeByGenre = genreId => {\n  return fetch(`${ANIME_URL}/search/anime?q=&genre=${genreId}`).then(response => response.json());\n};\n\nconst api = {\n  //search operation by user\n  findAllAnimeForUser,\n  findWatchedAnimeForUser,\n  findCompletedAnimeForUser,\n  //search operation by anime\n  findAnimeByID,\n  findAnimeByTitle,\n  findAnimeByGenre\n};\nexport default api;","map":{"version":3,"sources":["/Users/tomdiaz/Desktop/webdev-sp21-afo-client-react/src/services/anime-service.js"],"names":["ANIME_URL","findAllAnimeForUser","user","fetch","then","response","json","findWatchedAnimeForUser","findCompletedAnimeForUser","findAnimeByID","id","findAnimeByTitle","title","findAnimeByGenre","genreId","api"],"mappings":"AAAA,MAAMA,SAAS,GAAG,0BAAlB,C,CAEA;AACA;AACA;AACA;;AACA,MAAMC,mBAAmB,GAAIC,IAAD,IAAU;AAClC,SAAOC,KAAK,CAAE,GAAEH,SAAU,SAAQE,IAAK,gBAA3B,CAAL,CACFE,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,CAAP;AAEH,CAHD;;AAKA,MAAMC,uBAAuB,GAAIL,IAAD,IAAU;AACtC,SAAOC,KAAK,CAAE,GAAEH,SAAU,SAAQE,IAAK,qBAA3B,CAAL,CACFE,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,CAAP;AAEH,CAHD;;AAKA,MAAME,yBAAyB,GAAIN,IAAD,IAAU;AACxC,SAAOC,KAAK,CAAE,GAAEH,SAAU,SAAQE,IAAK,sBAA3B,CAAL,CACFE,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,CAAP;AAEH,CAHD,C,CAKA;;;AACA,MAAMG,aAAa,GAAIC,EAAD,IAAQ;AAC1B,SAAOP,KAAK,CAAE,GAAEH,SAAU,UAASU,EAAG,EAA1B,CAAL,CACFN,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,CAAP;AAEH,CAHD,C,CAKA;;;AACA,MAAMK,gBAAgB,GAAIC,KAAD,IAAW;AAChC,SAAOT,KAAK,CAAE,GAAEH,SAAU,mBAAkBY,KAAM,EAAtC,CAAL,CACFR,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,CAAP;AAEH,CAHD,C,CAKA;;;AACA,MAAMO,gBAAgB,GAAIC,OAAD,IAAa;AAClC,SAAOX,KAAK,CAAE,GAAEH,SAAU,0BAAyBc,OAAQ,EAA/C,CAAL,CACFV,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,CAAP;AAEH,CAHD;;AAKA,MAAMS,GAAG,GAAG;AACR;AACAd,EAAAA,mBAFQ;AAGRM,EAAAA,uBAHQ;AAIRC,EAAAA,yBAJQ;AAKR;AACAC,EAAAA,aANQ;AAORE,EAAAA,gBAPQ;AAQRE,EAAAA;AARQ,CAAZ;AAWA,eAAeE,GAAf","sourcesContent":["const ANIME_URL = \"https://api.jikan.moe/v3\"\n\n// tested with postman for users:\n// 1. Nekomata1037\n// 2. taffy0066\n// Note. These are usernames for MyAnimeList\nconst findAllAnimeForUser = (user) => {\n    return fetch(`${ANIME_URL}/user/${user}/animelist/all`)\n        .then(response => response.json())\n}\n\nconst findWatchedAnimeForUser = (user) => {\n    return fetch(`${ANIME_URL}/user/${user}/animelist/watching`)\n        .then(response => response.json())\n}\n\nconst findCompletedAnimeForUser = (user) => {\n    return fetch(`${ANIME_URL}/user/${user}/animelist/completed`)\n        .then(response => response.json())\n}\n\n// fetch request for single MyAnimeList Objects\nconst findAnimeByID = (id) => {\n    return fetch(`${ANIME_URL}/anime/${id}`)\n        .then(response => response.json())\n}\n\n// fetch request for anime by tile\nconst findAnimeByTitle = (title) => {\n    return fetch(`${ANIME_URL}/search/anime?q=${title}`)\n        .then(response => response.json())\n}\n\n// fetch request for anime by genre\nconst findAnimeByGenre = (genreId) => {\n    return fetch(`${ANIME_URL}/search/anime?q=&genre=${genreId}`)\n        .then(response => response.json())\n}\n\nconst api = {\n    //search operation by user\n    findAllAnimeForUser,\n    findWatchedAnimeForUser,\n    findCompletedAnimeForUser,\n    //search operation by anime\n    findAnimeByID,\n    findAnimeByTitle,\n    findAnimeByGenre\n}\n\nexport default api;"]},"metadata":{},"sourceType":"module"}